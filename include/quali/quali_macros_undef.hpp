/*!
@file

@copyright Barrett Adair 2015
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

*/

#ifndef QUALI_MACROS_UNDEF_HPP
#define QUALI_MACROS_UNDEF_HPP

#define QUALI_UNDEF_FAILURE(x) static_assert(false, "macro "#x" is not defined. Did you change the name?");

#ifdef QUALI_MACROS_HPP
#undef QUALI_MACROS_HPP
#else
QUALI_UNDEF_FAILURE(QUALI_MACROS_HPP);
#endif //QUALI_MACROS_HPP

#ifdef QUALI_DEFAULT
#undef QUALI_DEFAULT
#else
QUALI_UNDEF_FAILURE(QUALI_DEFAULT);
#endif //QUALI_DEFAULT


#ifdef QUALI_PP_CAT_
#undef QUALI_PP_CAT_
#else
QUALI_UNDEF_FAILURE(QUALI_PP_CAT_);
#endif //QUALI_PP_CAT_


#ifdef QUALI_PP_CAT
#undef QUALI_PP_CAT
#else
QUALI_UNDEF_FAILURE(QUALI_PP_CAT);
#endif //QUALI_PP_CAT


#ifdef QUALI_STRINGIFY
#undef QUALI_STRINGIFY
#else
QUALI_UNDEF_FAILURE(QUALI_STRINGIFY);
#endif //QUALI_STRINGIFY


/*********** QUALI_TOKENS expansion *************/


#ifdef QUALI_BEGIN_TOKENS
#undef QUALI_BEGIN_TOKENS
#else
QUALI_UNDEF_FAILURE(QUALI_BEGIN_TOKENS);
#endif //QUALI_BEGIN_TOKENS


#ifdef QUALI_DELIMITER_TOKENS
#undef QUALI_DELIMITER_TOKENS
#else
QUALI_UNDEF_FAILURE(QUALI_DELIMITER_TOKENS);
#endif //QUALI_DELIMITER_TOKENS


#ifdef QUALI_END_TOKENS
#undef QUALI_END_TOKENS
#else
QUALI_UNDEF_FAILURE(QUALI_END_TOKENS);
#endif //QUALI_END_TOKENS


#ifdef QUALI_EXPAND_TOKENS
#undef QUALI_EXPAND_TOKENS
#else
QUALI_UNDEF_FAILURE(QUALI_EXPAND_TOKENS);
#endif //QUALI_EXPAND_TOKENS


/*********** QUALI_FLAGS expansion *************/


#ifdef QUALI_BEGIN_FLAGS
#undef QUALI_BEGIN_FLAGS
#else
QUALI_UNDEF_FAILURE(QUALI_BEGIN_FLAGS);
#endif //QUALI_BEGIN_FLAGS


#ifdef QUALI_DELIMITER_FLAGS
#undef QUALI_DELIMITER_FLAGS
#else
QUALI_UNDEF_FAILURE(QUALI_DELIMITER_FLAGS);
#endif //QUALI_DELIMITER_FLAGS


#ifdef QUALI_END_FLAGS
#undef QUALI_END_FLAGS
#else
QUALI_UNDEF_FAILURE(QUALI_END_FLAGS);
#endif //QUALI_END_FLAGS


#ifdef QUALI_EXPAND_FLAGS
#undef QUALI_EXPAND_FLAGS
#else
QUALI_UNDEF_FAILURE(QUALI_EXPAND_FLAGS);
#endif //QUALI_EXPAND_FLAGS


/*********** QUALI_INTC expansion *************/


#ifdef QUALI_BEGIN_INTC
#undef QUALI_BEGIN_INTC
#else
QUALI_UNDEF_FAILURE(QUALI_BEGIN_INTC);
#endif //QUALI_BEGIN_INTC


#ifdef QUALI_DELIMITER_INTC
#undef QUALI_DELIMITER_INTC
#else
QUALI_UNDEF_FAILURE(QUALI_DELIMITER_INTC);
#endif //QUALI_DELIMITER_INTC


#ifdef QUALI_END_INTC
#undef QUALI_END_INTC
#else
QUALI_UNDEF_FAILURE(QUALI_END_INTC);
#endif //QUALI_END_INTC


#ifdef QUALI_EXPAND_INTC
#undef QUALI_EXPAND_INTC
#else
QUALI_UNDEF_FAILURE(QUALI_EXPAND_INTC);
#endif //QUALI_EXPAND_INTC


/*********** boilerplate for macro overloads **************/


#ifdef QUALI_MACRO_SELECT
#undef QUALI_MACRO_SELECT
#else
QUALI_UNDEF_FAILURE(QUALI_MACRO_SELECT);
#endif //QUALI_MACRO_SELECT


#ifdef QUALI_GET_COUNT
#undef QUALI_GET_COUNT
#else
QUALI_UNDEF_FAILURE(QUALI_GET_COUNT);
#endif //QUALI_GET_COUNT


#ifdef QUALI_VA_SIZE
#undef QUALI_VA_SIZE
#else
QUALI_UNDEF_FAILURE(QUALI_VA_SIZE);
#endif //QUALI_VA_SIZE


#ifdef QUALI_VA_SELECT
#undef QUALI_VA_SELECT
#else
QUALI_UNDEF_FAILURE(QUALI_VA_SELECT);
#endif //QUALI_VA_SELECT


#ifdef QUALI_EXPAND
#undef QUALI_EXPAND
#else
QUALI_UNDEF_FAILURE(QUALI_EXPAND);
#endif //QUALI_EXPAND


#ifdef QUALI_ELEMENT
#undef QUALI_ELEMENT
#else
QUALI_UNDEF_FAILURE(QUALI_ELEMENT);
#endif //QUALI_ELEMENT


#ifdef QUALI_IMPL_1
#undef QUALI_IMPL_1
#else
QUALI_UNDEF_FAILURE(QUALI_IMPL_1);
#endif //QUALI_IMPL_1


#ifdef QUALI_IMPL_2
#undef QUALI_IMPL_2
#else
QUALI_UNDEF_FAILURE(QUALI_IMPL_2);
#endif //QUALI_IMPL_2


#ifdef QUALI_IMPL_3
#undef QUALI_IMPL_3
#else
QUALI_UNDEF_FAILURE(QUALI_IMPL_3);
#endif //QUALI_IMPL_3


#ifdef QUALI_IMPL_4
#undef QUALI_IMPL_4
#else
QUALI_UNDEF_FAILURE(QUALI_IMPL_4);
#endif //QUALI_IMPL_4


#ifdef QUALI_IMPL_5
#undef QUALI_IMPL_5
#else
QUALI_UNDEF_FAILURE(QUALI_IMPL_5);
#endif //QUALI_IMPL_5


#ifdef QUALI_FLAGS
#undef QUALI_FLAGS
#else
QUALI_UNDEF_FAILURE(QUALI_FLAGS);
#endif //QUALI_FLAGS


#ifdef QUALI_TOKENS
#undef QUALI_TOKENS
#else
QUALI_UNDEF_FAILURE(QUALI_TOKENS);
#endif //QUALI_TOKENS


#ifdef QUALI_INTC
#undef QUALI_INTC
#else
QUALI_UNDEF_FAILURE(QUALI_INTC);
#endif //QUALI_INTC

#undef QUALI_UNDEF_FAILURE

#endif //QUALI_MACROS_UNDEF_HPP