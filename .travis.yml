
# Copyright Louis Dionne 2015
# Modified Work Copyright Barrett Adair 2015
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.md or copy at http://boost.org/LICENSE_1_0.txt)

language: c++
compiler: clang
os: linux
sudo: false

# Do not build branches of the form "pr/*". By prefixing pull requests coming
# from branches inside the repository with pr/, this avoids building both the
# branch push _and_ the pull request.
branches:
  except: /pr\/.*/

env:
  global:
    # GitHub token for pushing the documentation, logging in with the
    # Travis command line utility and so on. The token is stored in the
    # ${GITHUB_TOKEN} environment variable.
    - secure: ""

  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true


matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true

  include:
    ##########################################################################
    # Build with the main configuration on all the supported compilers
    #
    # Note that we only use the memory checker on the main configuration to
    # speed up Travis builds.
    ##########################################################################

    # Clang 3.6
    - env: UNIT_TESTS=true COMPILER=clang++-3.6 CMAKE_OPTIONS="-DCLBL_ENABLE_MEMCHECK=ON"
      addons: &clang36
        apt:
          packages: ["clang-3.6", "valgrind"]
          sources: &sources
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.5
            - llvm-toolchain-precise-3.6
            - llvm-toolchain-precise-3.7
            - llvm-toolchain-precise

    # Clang 3.7
    - env: UNIT_TESTS=true COMPILER=clang++-3.7 CMAKE_OPTIONS="-DCLBL_ENABLE_MEMCHECK=ON"
      addons: &clang37
        apt:
          packages: ["clang-3.7", "valgrind"]
          sources: *sources

    # Xcode 6.4
    - os: osx
      env: UNIT_TESTS=true COMPILER=clang++
      osx_image: xcode6.4

    # Xcode 7
    - os: osx
      env: UNIT_TESTS=true COMPILER=clang++
      osx_image: xcode7


    ##########################################################################
    # Build with variations in the configuration
    ##########################################################################

    # Build with libstdc++ instead of libc++
    - env: UNIT_TESTS=true COMPILER=clang++-3.7 STDLIB=libstdc++
      addons:
        apt:
          packages: ["clang-3.7", "g++-5"]
          sources: *sources

    ##########################################################################
    # Jobs that are allowed to fail
    ##########################################################################
    # Clang trunk
    - env: UNIT_TESTS=true COMPILER=clang++-3.8
      addons:
        apt:
          packages: ["clang-3.8"]
          sources: *sources

    # Xcode 7.2 beta 1
    - os: osx
      env: UNIT_TESTS=true COMPILER=clang++
      osx_image: xcode7.2b1


  allow_failures:
    - env: UNIT_TESTS=true COMPILER=clang++-3.8
    - osx_image: xcode7.2b1

install:
  ############################################################################
  # All the dependencies are installed in ${TRAVIS_BUILD_DIR}/deps/
  ############################################################################
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake
    fi

  ############################################################################
  # Install libc++ and libc++abi (on Linux only; Xcode uses libc++ by default)
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" && "${STDLIB}" != "libstdc++" ]]; then
      if   [[ "${COMPILER}" == "clang++-3.6" ]]; then LLVM_VERSION="3.6.2";
      elif [[ "${COMPILER}" == "clang++-3.7" ]]; then LLVM_VERSION="3.7.0";
      else                                            LLVM_VERSION="trunk"; fi

      if [[ "${LLVM_VERSION}" != "trunk" ]]; then
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        TAR_FLAGS="-xJ"
      else
        LLVM_URL="https://github.com/llvm-mirror/llvm/archive/master.tar.gz"
        LIBCXX_URL="https://github.com/llvm-mirror/libcxx/archive/master.tar.gz"
        LIBCXXABI_URL="https://github.com/llvm-mirror/libcxxabi/archive/master.tar.gz"
        TAR_FLAGS="-xz"
      fi

      mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi
      travis_retry wget --quiet -O - ${LLVM_URL} | tar --strip-components=1 ${TAR_FLAGS} -C llvm
      travis_retry wget --quiet -O - ${LIBCXX_URL} | tar --strip-components=1 ${TAR_FLAGS} -C llvm/projects/libcxx
      travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 ${TAR_FLAGS} -C llvm/projects/libcxxabi
      (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/llvm/install -DCMAKE_CXX_COMPILER=clang++)
      (cd llvm/build/projects/libcxx && make install -j2)
      (cd llvm/build/projects/libcxxabi && make install -j2)

      export CXXFLAGS="-I ${DEPS_DIR}/llvm/install/include/c++/v1"
      export LDFLAGS="-L ${DEPS_DIR}/llvm/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${DEPS_DIR}/llvm/install/lib"
    fi

before_script:
  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"

  ############################################################################
  # Go back to the root of the project and setup the build directory
  ############################################################################
  - cd ${TRAVIS_BUILD_DIR}
  - (mkdir build && cd build && cmake .. -DCMAKE_CXX_COMPILER=${COMPILER} -DCLBL_ENABLE_WERROR=ON ${CMAKE_OPTIONS})


script:

  ############################################################################
  # Build and run the unit tests and examples.
  ############################################################################
  - |
    if [[ "${UNIT_TESTS}" == "true" ]]; then
      export CTEST_PARALLEL_LEVEL=2 # Run unit tests on two cores
      (cd build && make check -j2 -k)
    fi

notifications:
  webhooks:
    urls: https://webhooks.gitter.im/e/af510732352fc5f425e7
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
